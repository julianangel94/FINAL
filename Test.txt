CREATE OR REPLACE FUNCTION mask_function (x IN VARCHAR2)
RETURN VARCHAR2 IS
   x VARCHAR2 := '';
BEGIN
IF (x.length BETWEEN 1 AND 1000) THEN
  DBMS_OUTPUT.PUT_LINE ('Error very large character');
  ELSE IF (x.length <> 3 and x = '*') then
    REPLACE('x', '*',',x');
      ElSE IF (x.length = 3 and x = '*') then
       REPLACE('x', '*',',x.length := 3,x.length := 3,x.length := 3');
         ELSE IF (x.length = 2 and x = '*') then
            REPLACE('x', '*','');
              ELSE
               DBMS_OUTPUT.PUT_LINE ('character' || x);
END IF;
  RETURN x;
END;

CREATE SEQUENCE masks_SEQ START WITH 1 INCREMENT BY 1;

CREATE TABLE masks 
(
    ID_MASK  NUMBER NOT NULL,
    mask varchar2(1000) NOT NULL,
    result varchar2(4000) NOT NULL
    CONSTRAINT PK_MASK PRIMARY KEY (ID_MASK)
);

CREATE OR REPLACE TRIGGER TRG_masks
    AFTER INSERT ON masks
    FOR EACH ROW
    BEGIN
        INSERT INTO masks (result) VALUES (mask_function(x));
    END;


CREATE TRIGGER MASK_TRG2 BEFORE INSERT ON masks FOR EACH ROW
BEGIN
  SELECT masks_SEQ.NEXTVAL 
  INTO :new.ID_MASK
  FROM dual;
END;
